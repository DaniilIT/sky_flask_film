name: Build and deploy action  # CI
on: [push]
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: docker build
        run: docker build ./api -t ${{ vars.DOCKER_LOGIN }}/${{ vars.DOCKER_REPOSITORY }}:$GITHUB_REF_NAME-$GITHUB_RUN_ID
      - name: docker login
        run: docker login -u ${{ vars.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_TOKEN }}
      - name: docker push
        run: docker push ${{ vars.DOCKER_LOGIN }}/${{ vars.DOCKER_REPOSITORY }}:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DOCKER_LOGIN: ${{ vars.DOCKER_LOGIN }}
      DOCKER_REPOSITORY: ${{ vars.DOCKER_REPOSITORY }}
      GITHUB_REF_NAME: $GITHUB_REF_NAME
      GITHUB_RUN_ID: $GITHUB_RUN_ID
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: render configs
        run: |
          cat config_ci.py | envsubst > config.py
          cat docker-compose_ci.yaml | envsubst > docker-compose.yaml
      - name: clone files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_SSH }}
          source: "config.py,docker-compose.yaml"
          target: ${{ vars.DOCKER_REPOSITORY }}
      - name: run docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_SSH }}
          script: |
            cd sky_flask_film
            echo ${{ secrets.DEPLOY_PASSWORD }} | sudo -S docker-compose up -d
