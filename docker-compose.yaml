version: "3.9"
services:
  front:
    build:
      context: ./front/
    image: painassasin/node_cource_project:latest
    ports:
      - 80:80
    restart: always
    depends_on:
      migrations:
        condition: service_completed_successfully
  api:
    build:
      context: ./api/
    image: daniilit/sky_flask_film
    ports:
      - 5000:5000
    restart: always
    volumes:
      - ./api/project/config.py:/src/project/config.py
    depends_on:
      migrations:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
  migrations:
    build:
      context: ./api/
    image: daniilit/sky_flask_film
    volumes:
      - ./api/project/config.py:/src/project/config.py
    depends_on:
      postgres:
        condition: service_healthy
    command: [ "sh", "migr.sh"]
  postgres:
    image: postgres:alpine
    environment:
      - POSTGRES_USER=r
      - POSTGRES_PASSWORD=r
      - POSTGRES_DB=r
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10
